#pragma once

#include <string>

#include "error.h"

enum error_code {
    ERR_SUCCESS = 0,
	ERR_ID_EXPECTED,
    ERR_LBRACE_EXPECTED,
    ERR_RBRACE_EXPECTED,
    ERR_LBRACKET_EXPECTED,
    ERR_RBRACKET_EXPECTED,
    ERR_LPAREN_EXPECTED,
    ERR_RPAREN_EXPECTED,
    ERR_SEMICOLON_EXPECTED,
    ERR_MODULE_NAME_EXPECTED,
    ERR_PARAM_TYPE_EXPECTED,
    ERR_PARAM_NAME_EXPECTED,
    ERR_FORWARD_DECL_UNSUPPORTED,
    ERR_UNEXPECTED_TOKEN_PRIMARY_EXPR,
    ERR_INCOMPLETE_ESCAPE_SEQ,
    ERR_CONSTRUCTOR_CALLS_ITSELF,
    ERR_MEMBER_DECLARATION_EXPECTED,
    ERR_NESTED_FUNCTION_NOT_ALLOWED,
    ERR_PARAM_VOID_TYPE,
    ERR_FUNC_ALREADY_DEFINED,
    ERR_NESTED_CONSTRUCTOR_NOT_ALLOWED,
    ERR_CONSTRUCTOR_OUTSIDE_TYPE,
    ERR_CONSTRUCTOR_OVERLOAD_EXISTS,
    ERR_VARIABLE_VOID_TYPE,
    ERR_VARIABLE_ALREADY_DECLARED_SCOPE,
    ERR_TYPE_ALREADY_DEFINED,
    ERR_NESTED_TYPE_DECLARATION_NOT_ALLOWED,
    ERR_STRUCT_CONTAINS_METHOD,
    ERR_INTERFACE_CONTAINS_CONSTRUCTOR,
    ERR_INTERFACE_CONTAINS_MEMBER_VAR,
    ERR_DUPLICATE_PARAMETER,
    ERR_UNKNOWN_IDENTIFIER,
    ERR_UNKNOWN_FUNCTION,
    ERR_UNKNOWN_TYPE,
    ERR_NO_MATCHING_CONSTRUCTOR,
    ERR_TOO_MANY_INITIALIZER_VALUES,
    ERR_TYPE_MISMATCH_INITIALIZER,
    ERR_INTERFACE_INITIALIZER,
    ERR_ARRAY_INITIALIZER_UNSUPPORTED,
    ERR_INVALID_INITIALIZER_LIST_USAGE,
    ERR_TYPE_ASSIGNMENT_MISMATCH,
    ERR_NO_MATCHING_OPERATOR,
    ERR_TYPE_NOT_DEFINED,
    ERR_MEMBER_NAME_EXPECTED,
    ERR_NO_MEMBER_WITH_NAME,
    ERR_NO_MATCHING_OPERATOR_BUILTIN_USER,
    ERR_LOGICAL_NOT_BOOLEAN_ONLY,
    ERR_NEGATE_NUMERIC_ONLY,
    ERR_INCREMENT_INTEGER_ONLY,
    ERR_DECREMENT_INTEGER_ONLY,
    ERR_BASE_NOT_INDEXABLE,
    ERR_INDEXER_NOT_INTEGER,
    ERR_NO_MATCHING_FUNCTION,
    ERR_NO_MATCHING_CONSTRUCTOR_ARGS,
    ERR_IF_CONDITION_NOT_BOOLEAN,
    ERR_FOR_CONDITION_NOT_BOOLEAN,
    ERR_WHILE_CONDITION_NOT_BOOLEAN,
    ERR_RETURN_OUTSIDE_FUNCTION,
    ERR_CONSTRUCTOR_RETURNS_VALUE,
    ERR_VOID_FUNCTION_RETURNS_VALUE,
    ERR_FUNCTION_MUST_RETURN_VALUE,
    ERR_FUNCTION_RETURN_TYPE_MISMATCH,
    ERR_NOT_ALL_PATHS_RETURN_VALUE,
    ERR_NO_METHOD_WITH_NAME,
    ERR_THIS_OUTSIDE_NONSTATIC_METHOD,
    ERR_INVALID_FLOAT_MULTIPLE_DECIMAL,
    ERR_INVALID_FLOAT_NO_DIGITS_AFTER_DECIMAL,
    ERR_UNTERMINATED_CHAR_LITERAL,
    ERR_UNTERMINATED_STRING_LITERAL,
    ERR_TOO_MANY_CHARS_IN_CHAR_LITERAL,
    ERR_EXPRESSION_EXPECTED,
    ERR_UNEXPECTED_IDENTIFIER,
    ERR_DECLARATION_EXPECTED,
    ERR_UNINITIALIZED_VARIABLE,
    ERR_MEMBER_ACCESS_ON_NONCOMPOSITE,
    ERR_PARAMETER_EXPECTED,
    ERR_NO_CONVERSION_EXISTS,
    ERR_CONVERSION_EXPLICIT_CAST_REQUIRED,
    ERR_RETURN_TYPE_CANT_OVERLOAD,
    ERR_MAIN_OVERLOADED,
    ERR_NO_MATCHING_METHOD,
    ERR_INTERNAL_ERROR,
    ERR_MODULE_NOT_FOUND,
    ERR_IMPORT_BAD_POS,
    ERR_NAME_COLLISION,
    ERR_UNTERMINATED_COMMENT,
    ERR_TYPENAME_EXPECTED,
    ERR_DUPLICATE_TYPE_MODIFIER,
    ERR_ADDRESS_OF_RVALUE,
    ERR_CANNOT_INFER_TYPE_NO_INIT,
    ERR_ARROW_EXPECTED,
    ERR_VAR_NAME_EXPECTED,
    ERR_CONST_NO_INITIALIZER,
    ERR_CONST_ASSIGNMENT,
    ERR_ASSIGNMENT_TO_RVALUE,
    ERR_ANGLE_LEFT_EXPECTED,
    ERR_ANGLE_RIGHT_EXPECTED,
    ERR_ONE_GENERIC_REQUIRED,
    ERR_DUPLICATE_GENERIC,
    ERR_INTERFACE_METHOD_HAS_BODY,
    ERR_INTERFACE_IS_DERIVED,
    ERR_STRUCT_IS_DERIVED,
    ERR_MULTIPLE_BASE_CLASSES,
    ERR_BASE_CLASS_NOT_FIRST,
    ERR_OVERRIDE_NOT_FOUND,
    ERR_INTERFACE_METHOD_NOT_IMPLEMENTED,
    ERR_COLON_EXPECTED,
    ERR_CIRCULAR_INHERITANCE,
    ERR_DEREFERENCE_OF_RVALUE,
    ERR_INVALID_ARRAY_INITIALIZER_USAGE,
    ERR_ARRAY_INITIALIZER_TYPE_MISMATCH,
    ERR_CANNOT_INFER_TYPE_UNKNOWN_INIT,
    ERR_VARIABLE_SHADOWS_GENERIC,
    ERR_GENERIC_SHADOWS_VARIABLE,
    ERR_AMBIGUOUS_CONSTRUCTOR_CALL,
	ERR_AMBIGUOUS_METHOD_CALL,
	ERR_AMBIGUOUS_FUNCTION_CALL,
    ERR_OVERRIDE_CANT_BE_GENERIC,
    ERR_CANNOT_INFER_TYPE,
    ERR_UNKNOWN_ESCAPE_SEQUENCE,
};

enum warning_code {
    WARN_VARIABLE_UNUSED,
    WARN_FUNCTION_UNUSED,
    WARN_TYPE_UNUSED,
    WARN_PARAMETER_UNUSED,
    WARN_VARIABLE_ASSIGNED_UNUSED,
    WARN_UNREACHABLE_CODE,
    WARN_CAST_UNNEEDED,
};

enum advice_code {
    
};

struct error_catalog {
    static const error_info& get_error_info(error_code code) {
        static const error_info errors[] = {
            {"S001", "Identifier expected"},
            {"S002", "'{' expected"},
            {"S003", "'}' expected"},
            {"S004", "'[' expected"},
            {"S005", "']' expected"},
            {"S006", "'(' expected"},
            {"S007", "')' expected"},
            {"S008", "';' expected"},
            {"S009", "Expected module name"},
            {"S010", "Expected parameter type"},
            {"S011", "Expected parameter name"},
            {"S012", "Steel does not support forward declarations"},
            {"S013", "Unexpected token in primary expression"},
            {"S014", "Incomplete escape sequence in literal"},
            {"S015", "Constructor cannot call itself"},
            {"S016", "Member declaration expected"},
            {"S017", "Nested function is not allowed"},
            {"S018", "Parameters cannot be of type void"},
            {"S019", "Function '%s' is already defined"},
            {"S020", "Nested constructor is not allowed"},
            {"S021", "Constructor must be defined within a type"},
            {"S022", "Constructor with the same parameters already exists"},
            {"S023", "Variables cannot be of type void"},
            {"S024", "Variable '%s' already declared in the same scope"},
            {"S025", "Type '%s' is already defined"},
            {"S026", "Nested type declaration is not allowed"},
            {"S027", "Structs cannot contain methods"},
            {"S028", "Interfaces cannot contain constructors"},
            {"S029", "Interfaces cannot contain member variables"},
            {"S030", "Duplicate parameter '%s'"},
            {"S031", "Unknown identifier '%s'"},
            {"S032", "Unknown function '%s'"},
            {"S033", "Unknown type '%s'"},
            {"S034", "No constructor for type '%s' matches argument types provided"},
            {"S035", "Too many values in initializer list"},
            {"S036", "Type mismatch in initializer list"},
            {"S037", "Interface initializer is not allowed"},
            {"S038", "Array initializers are unsupported"},
            {"S039", "Initializer list can only be used with custom types"},
            {"S040", "Variable of type '%s' cannot be assigned a value of type \"%s\""},
            {"S041", "No built-in operator matches the types provided"},
            {"S042", "The type '%s' is not defined"},
            {"S043", "Expected member name"},
            {"S044", "The type '%s' has no member named '%s'"},
            {"S045", "No built-in or user-defined operator matches the types provided, types are '%s', '%s'"},
            {"S046", "Logical NOT operator can only be applied to boolean expressions"},
            {"S047", "NEGATE operator can only be applied to integer or float expressions"},
            {"S048", "Increment operator can only be applied to integer expressions"},
            {"S049", "Decrement operator can only be applied to integer expressions"},
            {"S050", "Base expression is not indexable"},
            {"S051", "Indexer must be an integer expression"},
            {"S052", "No function '%s' matches the arguments provided"},
            {"S053", "No constructor for '%s' matches the arguments provided"},
            {"S054", "If statement condition must be a boolean expression"},
            {"S055", "For loop condition must be a boolean expression"},
            {"S056", "While loop condition must be a boolean expression"},
            {"S065", "Return statement outside of function or constructor"},
            {"S066", "Constructors cannot return a value"},
            {"S067", "Void function '%s' cannot return a value"},
            {"S068", "Function '%s' must return a value"},
            {"S069", "Function '%s' returns type '%s' but got '%s'"},
            {"S070", "Not all code paths return a value"},
            {"S071", "The type '%s' has no method named '%s'"},
            {"S072", "'this' can only be used inside a non-static method or constructor"},
            {"S078", "Invalid float literal: multiple decimal points"},
            {"S079", "Invalid float literal: no digits after decimal point"},
            {"S080", "Unterminated char literal"},
            {"S081", "Unterminated string literal"},
            {"S082", "Too many characters in char literal"},
            {"S083", "Expected expression"},
            {"S084", "Unexpected identifier"},
            {"S085", "Expected a declaration"},
            {"S086", "Use of uninitialized variable '%s'"},
            {"S087", "Member access not allowed on non-composite type '%s'"},
            {"S088", "Expected parameter"},
            {"S089", "No built-in or user-defined conversion exists from '%s' to '%s'"},
            {"S090", "Conversion from '%s' to '%s' is explicit, did you forget to use a cast?"},
            {"S091", "Functions or methods cannot be overloaded by return type"},
            {"S092", "Main function cannot be overloaded"},
            {"S093", "No method '%s' matches the arguments provided"},
            {"S094", "An internal compiler error occurred, phase: '%s', message: '%s'"},
            {"S095", "Module '%s' not found"},
            {"S096", "Import statements can only appear at the top-level (cannot exist within any scope)"},
            {"S097", "Name collision, '%s' is defined in multiple places"},
            {"S098", "Unterminated mutli-line comment"},
            {"S099", "Type name expected"},
            {"S100", "Duplicate type modifier"},
            {"S101", "Cannot get memory address of non-variable"},
            {"S102", "Variable type cannot be inferred without an initializer"},
            {"S103", "'->' expected"},
            {"S104", "Variable name expected"},
            {"S105", "A const variable must have an initializer"},
            {"S106", "A const variable can only be assigned a value at initialization"},
            {"S107", "A constant value cannot be assigned"},
            {"S108", "'<' expected"},
            {"S109", "'>' expected"},
            {"S110", "At least one generic parameter is required"},
            {"S111", "Duplicate generic parameter '%s'"},
			{"S112", "Interface methods cannot have a body"},
            {"S113", "An interface cannot be derived from any type"},
            {"S114", "Structs cannot be derived from any type"},
            {"S115", "Classes can only derive from one base class"},
			{"S116", "The base class '%s' must be first in the implementation list"},
            {"S117", "No overridden method '%s' found in any base class or interface"},
            {"S118", "Class '%s' does not implement interface method '%s'"},
            {"S119", "':' expected"},
            {"S120", "Circular inheritance detected. Class '%s' eventually inherits from itself: %s"},
            {"S121", "Only pointers can be dereferenced"},
            {"S122", "Array initializer can only be used to initialize arrays"},
            {"S123", "Type mismatch in array initializer. Expected '%s' but got '%s'"},
            {"S124", "Cannot infer type from initializer"},
            {"S125", "Local variable '%s' shadows generic parameter '%s'"},
            {"S126", "Generic parameter '%s' shadows local variable '%s'"},
            {"S127", "Ambiguous constructor call to '%s' with the given argument types"},
            {"S128", "Ambiguous method call to '%s' with the given argument types"},
            {"S129", "Ambiguous function call to '%s' with the given argument types"},
            {"S130", "Generic functions cannot be marked as 'override'"},
            {"S131", "Failed to infer type"},
            {"S132", "Invalid escape sequence: '%s'"},

        };
        return errors[code - 1];
    }

    static const error_info& get_warning_info(warning_code code) {
        static const error_info warnings[] = {
            {"SW01", "Variable \"%s\" is declared but never used"},
            {"SW02", "Function \"%s\" is declared but never used"},
            {"SW03", "Type \"%s\" is declared but never used"},
            {"SW04", "Parameter \"%s\" is declared but never used"},
            {"SW05", "Variable \"%s\" is assigned a value but never used"},
            {"SW10", "Unreachable code detected"},
            {"SW11", "An implicit cast exists from '%s' to '%s', an explicit cast is not needed"},
        };
        return warnings[code];
    }
};